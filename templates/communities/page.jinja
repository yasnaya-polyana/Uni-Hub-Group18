{% extends 'base/index.jinja' %}
{% include 'posts/post-logic.jinja' %}

{% block title %}
{{ community.name }}
{% endblock %}

{% block content %}
  <div class="max-w-6xl mx-auto">
    <!-- Community Header -->
    {% include 'communities/page-header.jinja' %}
    <!-- Main Content Area -->
    <div class="flex gap-4">
      <!-- Posts Column -->
      <div class="w-3/4">
        <!-- Create Post -->
        {% if is_member or is_owner or is_moderator or user.is_superuser %}
          {% include 'communities/create-post.jinja' %}
        {% endif %}

        {# --- START: Add Client-Side Sort Component --- #}
        <div class="my-4 flex justify-between items-center">
          <h3 class="text-lg font-semibold">Posts</h3>
          {% include 'components/sort-posts.jinja' %}
        </div>
        {# --- END: Add Client-Side Sort Component --- #}

        <!-- Display Posts -->
        {# --- START: Add ID to Posts Container --- #}
        <div id="community-posts-list" class="space-y-4"> {# <-- Added ID here #}
          {% if posts %}
            {% for post in posts %}
              {# Ensure post-card.jinja includes data attributes #}
              {% include 'posts/post.jinja' %}
            {% endfor %}
          {% else %}
            <div class="card bg-base-100 shadow">
              <div class="card-body items-center text-center">
                <p>No posts found in this community yet{% if search_str %} matching your search{% endif %}.</p>
                {% if not search_str and (is_member or is_owner or is_moderator or user.is_superuser) %}
                  <p>Why not be the first to create one?</p>
                {% endif %}
              </div>
            </div>
          {% endif %}
        </div> {# End Posts Container #}
        {# --- END: Add ID to Posts Container --- #}

      </div> {# End Posts Column #}

      <!-- Sidebar Column -->
      <div class="w-1/4">
        {# Include the actual community sidebar template #}
        {% include 'communities/page-sidebar.jinja' %}
      </div> {# End Sidebar Column #}

    </div> {# End Main Content Area Flex #}
  </div> {# End Container #}

  {% include 'components/sort-posts-logic.jinja' %}

  <!-- Invite Modal -->
  {% if is_owner or is_moderator %}
  <div id="invite-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-base-100 p-6 rounded-box shadow-lg max-w-md w-full">
      <h3 class="font-bold text-lg mb-4">Invite Users to {{ community.name }}</h3>
      
      <form action="{{ url('community_invite', community.id) }}" method="post">
        {% csrf_token %}
        <div class="form-control mb-4">
          <label class="label">
            <span class="label-text">Username</span>
          </label>
          <input type="text" name="username" id="invite-username" placeholder="Enter username" class="input input-bordered w-full" required>
        </div>
        
        <div class="modal-action flex justify-between">
          <button type="button" id="close-invite-modal" class="btn">Cancel</button>
          <button type="submit" class="btn btn-primary">Send Invite</button>
        </div>
      </form>
    </div>
  </div>
  {% endif %}

  {# --- START: Invite Modal JavaScript --- #}
  {% if is_owner or is_moderator %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const inviteButton = document.getElementById('invite-users-btn');
      const inviteModal = document.getElementById('invite-modal');
      const closeButton = document.getElementById('close-invite-modal');

      if (inviteButton && inviteModal && closeButton) {
        // Show modal on button click
        inviteButton.addEventListener('click', function() {
          inviteModal.classList.remove('hidden');
          inviteModal.classList.add('flex'); // Use flex to center it as per modal styles
        });

        // Hide modal on close button clic
        closeButton.addEventListener('click', function() {
          inviteModal.classList.add('hidden');
          inviteModal.classList.remove('flex');
        });

        // Hide modal on clicking outside the modal content
        inviteModal.addEventListener('click', function(event) {
          // Check if the click is directly on the background overlay
          if (event.target === inviteModal) {
            inviteModal.classList.add('hidden');
            inviteModal.classList.remove('flex');
          }
        });
      } else {
        console.error('Invite modal elements not found. Button:', inviteButton, 'Modal:', inviteModal, 'Close Button:', closeButton);
      }
    });
  </script>
  {% endif %}
  {# --- END: Invite Modal JavaScript --- #}

  {# --- START: Create Post Toggle JavaScript --- #}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const createPostToggle = document.getElementById('create-post-toggle');
      const createPostForm = document.getElementById('create-post-form');
      const cancelPostBtn = document.getElementById('cancel-post-btn');
      
      if (createPostToggle && createPostForm) {
        // Show form when clicking the toggle button
        createPostToggle.addEventListener('click', function() {
          createPostToggle.classList.add('hidden');
          createPostForm.classList.remove('hidden');
          // Focus on title input after expanding
          const titleInput = document.querySelector('#create-post-form input[name="title"]');
          if (titleInput) {
            titleInput.focus();
          }
        });
        
        // Hide form when clicking cancel
        if (cancelPostBtn) {
          cancelPostBtn.addEventListener('click', function() {
            createPostForm.classList.add('hidden');
            createPostToggle.classList.remove('hidden');
            // Reset form fields if needed
            const form = document.querySelector('#create-post-form form');
            if (form) form.reset();
          });
        }
      } else {
        console.error('Create post elements not found. Toggle:', createPostToggle, 'Form:', createPostForm);
      }
      
      // Add form submission handling
      const postForm = document.querySelector('#create-post-form form');
      if (postForm) {
        postForm.addEventListener('submit', function(event) {
          // Log to verify the form is being submitted
          console.log('Form is being submitted');
          
          // If you're using the standard form submission, make sure the action is set correctly
          if (!postForm.getAttribute('action')) {
            // Set the action URL if it's not already set
            postForm.setAttribute('action', '{{ url("community_detail", community.id) }}');
          }
        });
      }
    });
  </script>
  {# --- END: Create Post Toggle JavaScript --- #}

{% endblock %}